class Solution {
    public static void combination(int[] candidates, int target,List<List<Integer>> ans,List<Integer> list,int idx){
        if(target==0){
            ans.add(new ArrayList<>(list));
            return;
        }
        for(int i=idx;i<candidates.length;i++){
            if( i!=idx && candidates[i]==candidates[i-1])continue;
            if(candidates[i]<=target){
                list.add(candidates[i]);
                 combination(candidates,target-candidates[i],ans,list,i+1);
                 list.remove(list.size()-1);
            }
        }
    }
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> ans=new ArrayList<>();
        List<Integer> list =new ArrayList<>();
        Arrays.sort(candidates);
        combination(candidates,target,ans,list,0);
        return ans;
            }
}
